apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-v1
  labels: { app: app, version: v1 }
spec:
  replicas: 1
  selector:
    matchLabels: { app: app, version: v1 }
  template:
    metadata:
      labels: { app: app, version: v1 }
    spec:
      containers:
      - name: app
        image: ghcr.io/remla23-team06/app:without-emojis
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: MODEL_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: my-config
              key: model.service.url
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-v2
  labels: { app: app, version: v2 }
spec:
  replicas: 1
  selector:
    matchLabels: { app: app, version: v2 }
  template:
    metadata:
      labels: { app: app, version: v2 }
    spec:
      containers:
      - name: app
        image: ghcr.io/remla23-team06/app:with-emojis
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: MODEL_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: my-config
              key: model.service.url
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-service
  labels:
    app: model-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: model-service
  template:
    metadata:
      labels:
        app: model-service
    spec:
      containers:
      - name: model-service
        image: ghcr.io/remla23-team06/model-service:4.0.3
        ports:
        - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: app
spec:
  selector:
    app: app
  ports:
    - name: http
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: model-service
  labels:
    app: model-svc
spec:
  selector:
    app: model-service
  ports:
    - name: http
      port: 8000
      targetPort: 8000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-config
data:
  model.service.url: "http://model-service:8000"
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: mymonitor
  labels:
    release: myprom
spec:
  selector:
    matchLabels:
      app: model-svc
  endpoints:
  - interval: 1s
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: my-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
      - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: my-entry-service
spec:
  gateways:
    - my-gateway
  hosts:
  - "*"
  http:
  - match:
    - queryParams:
        version:
          exact: "2.0.1"
    route:
    - destination:
        host: app
        subset: v2
  - match:
    - queryParams:
        version:
          exact: "0.1.1"
    route:
    - destination:
        host: app
        subset: v1
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: app
        subset: v1
      weight: 90
    - destination:
        host: app
        subset: v2
      weight: 10
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: app
spec:
  host: app
  subsets:
  - name: v1
    labels:
      { app: app, version: v1 }
  - name: v2
    labels:
      { app: app, version: v2 }
